/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState, useMemo } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei';
import * as THREE from "three";
import { useFrame } from '@react-three/fiber';
const model = new URL("./models/Stag-transformed.glb", import.meta.url);

export function Stag(props) {
  const group = useRef(null);
  const { nodes, materials, animations, scene } = useGLTF(model.href);;
  const { actions, mixer } = useAnimations(animations, group);

  useEffect(() => {
    // Chạy parallel
    // actions.Idle_2.play();
    // actions.Death().play();

    // Chạy liên tiếp
    actions.Idle_2.play();
    actions.Idle_2.setLoop(THREE.LoopOnce, 20);
    actions.Death.setLoop(THREE.LoopOnce, 20); // 1 là loopmode, 2 là số lần lặp nếu dùng mode LoopRepeat
    mixer.addEventListener("finished", function(e){
      if(e.action._clip.name == "Idle_2"){
        actions.Death.reset();
        actions.Death.play();
      } else if(e.action._clip.name == "Death"){
        actions.Idle_2.reset();
        actions.Idle_2.play();
      }
    })
    // Dựa vào mixer kiểm soat hoàn toàn animation
  }, [mixer]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="AnimalArmature">
          <primitive object={nodes.Body} />
          <primitive object={nodes.IKBackLegL} />
          <primitive object={nodes.IKFrontLegL} />
          <primitive object={nodes.IKBackLegR} />
          <primitive object={nodes.IKFrontLegR} />
          <group name="Stag">
            <skinnedMesh name="Cube" geometry={nodes.Cube.geometry} material={materials.Material} skeleton={nodes.Cube.skeleton} />
            <skinnedMesh name="Cube_1" geometry={nodes.Cube_1.geometry} material={materials['Material.001']} skeleton={nodes.Cube_1.skeleton} />
            <skinnedMesh name="Cube_2" geometry={nodes.Cube_2.geometry} material={materials['Material.003']} skeleton={nodes.Cube_2.skeleton} />
            <skinnedMesh name="Cube_3" geometry={nodes.Cube_3.geometry} material={materials['Material.010']} skeleton={nodes.Cube_3.skeleton} />
            <skinnedMesh name="Cube_4" geometry={nodes.Cube_4.geometry} material={materials['Material.011']} skeleton={nodes.Cube_4.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(model.href);
